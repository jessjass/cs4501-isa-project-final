language: python

python:
  - 3.5

services:
  - docker

before_script:
  # PREPARE DATABASE
  - mkdir db
  - docker-compose create mysql
  - docker-compose start mysql
  - sleep 10
  - docker-compose create mysql-cmdline
  - docker-compose start mysql-cmdline
  - sleep 10
  - docker exec -it mysql-cmdline bash -c "mysql -u root -p'\$3cureUS' -h db -e 'CREATE DATABASE cs4501;'"
  - docker exec -it mysql-cmdline bash -c "mysql -u root -p'\$3cureUS' -h db -e 'CREATE USER \"www\"@\"%\" IDENTIFIED BY \"\$3cureUS\";' "
  - docker exec -it mysql-cmdline bash -c "mysql -u root -p'\$3cureUS' -h db -e 'GRANT ALL ON cs4501.* TO \"www\"@\"%\";' "
  - docker exec -it mysql-cmdline bash -c "mysql -u root -p'\$3cureUS' -h db -e 'GRANT ALL ON test_cs4501.* TO \"www\"@\"%\";' "
  - sleep 10

  # COMPOSE REMAINING CONTAINERS
  - docker-compose up -d

script:
  # RUN DJANGO UNIT TESTS
  - docker exec -it models bash -c "python manage.py test --no-input"

after_script:
  # DECOMPOSE CONTAINERS
  - docker-compose down
  # BREAKDOWN
  - docker rm $(docker ps -a -q) -f
  - rm -rf db