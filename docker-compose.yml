mysql:
    image: mysql:5.7.14
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=$$3cureUS
    volumes:
      - ./db:/var/lib/mysql

mysql-cmdline:
    image: mysql:5.7.14
    container_name: mysql-cmdline
    links:
      - mysql:db
    environment:
      - MYSQL_ROOT_PASSWORD=$$3cureUS

models:
    image: tp33/django
    container_name: models
    links:
      -  mysql:db
#    ports:
#      - "8001:8000"
    volumes:
      -  ./app/models:/app
    command: bash -c "pip install requests && python manage.py makemigrations services && python manage.py migrate && python manage.py loaddata database.json && mod_wsgi-express start-server --url-alias /static static --working-directory ./ --reload-on-changes ./models/wsgi.py"

exp:
   image: tp33/django
   container_name: exp
   links:
      - models
      - kafka:kafka
      - es:es
#   ports:
#      - "8002:8000"
   volumes:
      - ./app/exp:/app
   command: bash -c "pip install requests && mod_wsgi-express start-server --working-directory ./ --reload-on-changes ./exp/wsgi.py"

web:
   image: tp33/django
   container_name: web
   links:
      - exp
  #  ports:
  #     - "8000:8000"
   volumes:
      - ./app/web:/app
   command: bash -c "pip install requests && python manage.py collectstatic <<<yes && mod_wsgi-express start-server --url-alias /static static --working-directory ./ --reload-on-changes ./web/wsgi.py"

web2:
   image: tp33/django
   container_name: web2
   links:
      - exp
  #  ports:
  #     - "8000:8000"
   volumes:
      - ./app/web:/app
   command: bash -c "pip install requests && python manage.py collectstatic <<<yes && mod_wsgi-express start-server --url-alias /static static --working-directory ./ --reload-on-changes ./web/wsgi.py"

kafka:
   image: spotify/kafka
   container_name: kafka
   environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
   hostname: kafka

es:
   image: elasticsearch:2.0
   container_name: es
   ports:
      - "9200:9200"

batch:
   image: tp33/django
   container_name: batch
   links:
      - kafka:kafka
      - es:es
   volumes:
      - ./app/batch:/app
   command: bash -c "python batch.py"

jmeter:
  image: hauptmedia/jmeter
  container_name: jmeter
  links:
    - lb:lb
  volumes:
    - ./app/jmeter:/opt/jmeter/tests
  command: bash -c "bin/jmeter -n -t tests/docker-local-perf-test.jmx -l tests/docker-local-perf-results.log"

lb:
   image: haproxy
   container_name: lb
   links:
      - web
      - web2
   volumes:
      - ./app/batch/:/usr/local/etc/haproxy/
   ports:
      - "80:80"

selenium-chrome:
  image: selenium/standalone-chrome
  container_name: selenium-chrome
  links:
    - lb:lb
  ports:
    - "4444:4444"

selenium:
  image: tp33/django
  container_name: selenium
  links:
    - lb:lb
    - selenium-chrome:selenium-chrome
  volumes:
    - ./app/selenium:/app
  command: bash -c "pip install selenium==2.48 && python docker_sel_test.py"

spark-master:
  image: gettyimages/spark
  command: bin/spark-class org.apache.spark.deploy.master.Master -h spark-master
  container_name: spark-master
  links:
    -  mysql:db
  hostname: spark-master
  environment:
    MASTER: spark://spark-master:7077
    SPARK_CONF_DIR: /conf
  expose:
    - 7001
    - 7002
    - 7003
    - 7004
    - 7005
    - 7006
    - 7077
    - 6066
  ports:
    - 4040:4040
    - 6066:6066
    - 7077:7077
    - 8080:8080
  volumes:
    - ./app/spark:/tmp/data
    - ./app/batch/spark:/tmp/data/logs

spark-worker:
  image: gettyimages/spark
  command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
  container_name: spark-worker
  hostname: spark-worker
  environment:
    SPARK_CONF_DIR: /conf
    SPARK_WORKER_CORES: 2
    SPARK_WORKER_MEMORY: 512m
    SPARK_WORKER_PORT: 8881
    SPARK_WORKER_WEBUI_PORT: 8081
  links:
    - spark-master
    -  mysql:db
  expose:
    - 7012
    - 7013
    - 7014
    - 7015
    - 7016
    - 8881
  ports:
    - 8081:8081
  volumes:
    - ./app/spark:/tmp/data
    - ./app/batch/spark:/tmp/data/logs