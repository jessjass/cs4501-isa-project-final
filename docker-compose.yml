mysql:
    image: mysql:5.7.14
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=$$3cureUS
    volumes:
      - ./db:/var/lib/mysql

mysql-cmdline:
    image: mysql:5.7.14
    container_name: mysql-cmdline
    links:
      - mysql:db
    environment:
      - MYSQL_ROOT_PASSWORD=$$3cureUS

models:
    image: tp33/django
    container_name: models
    links:
      -  mysql:db
    # ports:
    #   - "8001:8000"
    volumes:
      -  ./app/models:/app
    command: bash -c "pip install requests && python manage.py makemigrations services && python manage.py migrate && python manage.py loaddata database.json && mod_wsgi-express start-server --url-alias /static static --working-directory ./ --reload-on-changes ./models/wsgi.py"

exp:
   image: tp33/django
   container_name: exp
   links:
      - models
      - kafka:kafka
      - es:es
  #  ports:
  #     - "8002:8000"
   volumes:
      - ./app/exp:/app
   command: bash -c "pip install requests && mod_wsgi-express start-server --working-directory ./ --reload-on-changes ./exp/wsgi.py"

web:
   image: tp33/django
   container_name: web
   links:
      - exp
  #  ports:
  #     - "8000:8000"
   volumes:
      - ./app/web:/app
   command: bash -c "pip install requests && python manage.py collectstatic <<<yes && mod_wsgi-express start-server --url-alias /static static --working-directory ./ --reload-on-changes ./web/wsgi.py"

web2:
   image: tp33/django
   container_name: web2
   links:
      - exp
  #  ports:
  #     - "8000:8000"
   volumes:
      - ./app/web:/app
   command: bash -c "pip install requests && python manage.py collectstatic <<<yes && mod_wsgi-express start-server --url-alias /static static --working-directory ./ --reload-on-changes ./web/wsgi.py"

kafka:
   image: spotify/kafka
   container_name: kafka
   environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
   hostname: kafka

es:
   image: elasticsearch:2.0
   container_name: es
   ports:
      - "9200:9200"

batch:
   image: tp33/django
   container_name: batch
   links:
      - kafka:kafka
      - es:es
   volumes:
      - ./app/batch:/app
   command: bash -c "python batch.py"

lb:
   image: haproxy
   links:
      - web
      - web2
   volumes:
      - ./app/batch/:/usr/local/etc/haproxy/
   ports:
      - "8000:80"